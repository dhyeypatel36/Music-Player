%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2365 1426
%%HiResBoundingBox: 0 0 2364.96 1425.12
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2364.96 1425.12 re
W
q
[0.24 0 0 -0.24 0 1425.12] cm
q
0 0 9854.166 5936.2446 re
W*
q
[3.124492 0 0 3.124337 0 0.00229764] cm
/DeviceRGB {} CS
[0.0667 0.0667 0.0667] SC
/DeviceRGB {} cs
[0.0667 0.0667 0.0667] sc
0 0 3153.8462 1900 re
f
Q
q
[24.034554 0 0 24.033361 240.3455 240.33591] cm
/DeviceRGB {} CS
[0.9647 0.9647 0.9647] SC
/DeviceRGB {} cs
[0.9647 0.9647 0.9647] sc
10 0 m
380 0 l
380.32751 0 380.65424 0.016051 380.98016 0.048153 c
381.30609 0.080255 381.62967 0.128253 381.95087 0.192147 c
382.27206 0.256042 382.58939 0.335525 382.9028 0.430597 c
383.21619 0.525668 383.52417 0.635871 383.82675 0.761205 c
384.12933 0.886538 384.42508 1.026399 384.71393 1.180787 c
385.00275 1.335175 385.28333 1.503348 385.55563 1.685304 c
385.82797 1.86726 386.09073 2.062124 386.3439 2.269896 c
386.59708 2.477667 386.83945 2.697346 387.07101 2.928932 c
387.30261 3.160518 387.52231 3.402896 387.73007 3.656067 c
387.93787 3.909237 388.13272 4.171981 388.31467 4.444297 c
388.49664 4.716614 388.66483 4.997192 388.81921 5.286032 c
388.9736 5.574872 389.11343 5.870583 389.23874 6.173165 c
389.36407 6.475747 389.4743 6.783743 389.5694 7.097153 c
389.66446 7.410563 389.74396 7.727877 389.80783 8.049096 c
389.87173 8.370316 389.91974 8.693893 389.95184 9.019829 c
389.98395 9.345764 390 9.672488 390 10 c
390 217 l
390 217.32751 389.98395 217.65424 389.95184 217.98016 c
389.91974 218.30611 389.87173 218.62967 389.80783 218.95088 c
389.74396 219.27211 389.66446 219.58943 389.5694 219.90285 c
389.4743 220.21625 389.36407 220.52425 389.23874 220.82681 c
389.11343 221.12941 388.9736 221.42511 388.81921 221.71394 c
388.66483 222.00279 388.49664 222.28337 388.31467 222.55568 c
388.13272 222.828 387.93787 223.09076 387.73007 223.34393 c
387.52231 223.59711 387.30261 223.83948 387.07101 224.07106 c
386.83945 224.30264 386.59708 224.52232 386.3439 224.7301 c
386.09073 224.93787 385.82797 225.13272 385.55563 225.31467 c
385.28333 225.49663 385.00275 225.66481 384.71393 225.8192 c
384.42508 225.9736 384.12933 226.11345 383.82675 226.23877 c
383.52417 226.36412 383.21619 226.47433 382.90277 226.56941 c
382.58939 226.66446 382.27206 226.74394 381.95084 226.80783 c
381.62964 226.87173 381.30609 226.91974 380.98016 226.95186 c
380.65424 226.98395 380.32751 227 380 227 c
10 227 l
9.672488 227 9.345764 226.98395 9.019829 226.95186 c
8.693893 226.91974 8.370316 226.87173 8.049096 226.80783 c
7.727877 226.74394 7.410563 226.66446 7.097153 226.5694 c
6.783743 226.47432 6.475747 226.36412 6.173165 226.23877 c
5.870583 226.11345 5.574873 225.9736 5.286033 225.81921 c
4.997192 225.66481 4.716614 225.49663 4.444297 225.31467 c
4.171981 225.13272 3.909237 224.93787 3.656067 224.73009 c
3.402896 224.52232 3.160518 224.30264 2.928932 224.07106 c
2.697346 223.83948 2.477667 223.59711 2.269896 223.34393 c
2.062124 223.09076 1.86726 222.828 1.685304 222.55568 c
1.503348 222.28337 1.335176 222.00279 1.180787 221.71396 c
1.026399 221.42513 0.886538 221.12941 0.761205 220.82681 c
0.635871 220.52425 0.525668 220.21625 0.430597 219.90283 c
0.335525 219.58943 0.256042 219.27211 0.192147 218.95088 c
0.128253 218.62967 0.080255 218.30611 0.048153 217.98018 c
0.016051 217.65424 0 217.32751 0 217 c
0 10 l
0 9.672488 0.016051 9.345764 0.048153 9.019829 c
0.080255 8.693893 0.128253 8.370316 0.192147 8.049096 c
0.256042 7.727877 0.335525 7.410563 0.430597 7.097153 c
0.525668 6.783743 0.635871 6.475747 0.761205 6.173165 c
0.886538 5.870583 1.026399 5.574873 1.180787 5.286033 c
1.335175 4.997192 1.503348 4.716614 1.685304 4.444297 c
1.86726 4.171981 2.062124 3.909237 2.269896 3.656067 c
2.477667 3.402896 2.697346 3.160518 2.928932 2.928932 c
3.160518 2.697346 3.402896 2.477667 3.656067 2.269896 c
3.909237 2.062124 4.171981 1.86726 4.444297 1.685304 c
4.716614 1.503348 4.997192 1.335176 5.286032 1.180787 c
5.574872 1.026399 5.870583 0.886538 6.173165 0.761205 c
6.475747 0.635871 6.783743 0.525668 7.097153 0.430597 c
7.410563 0.335525 7.727877 0.256042 8.049096 0.192147 c
8.370316 0.128253 8.693893 0.080255 9.019829 0.048153 c
9.345764 0.016051 9.672488 0 10 0 c
h
f
Q
q
[38.418858 0 0 38.416954 3021.5498 422.42654] cm
/DeviceRGB {} CS
[0.0667 0.0667 0.0667] SC
/DeviceRGB {} cs
[0.0667 0.0667 0.0667] sc
50.073002 55.658001 m
48.443001 55.616001 46.977001 56.959 46.917004 58.546001 c
46.855003 60.196003 48.163002 61.625999 49.785004 61.683002 c
51.551003 61.744003 52.889004 60.456001 52.922005 58.664001 c
52.951 57.113998 51.608002 55.695999 50.073002 55.658001 c
h
f
33.373001 40.678001 m
35.264999 38.940002 37.382 37.539001 39.727001 36.490002 c
40.209 36.274002 40.611 36.014 40.553001 35.480003 c
40.524002 34.596004 39.816002 34.217003 38.969002 34.601002 c
34.039001 36.832001 30.164001 40.273003 27.374001 44.901001 c
26.633001 46.130001 26.065001 47.467003 25.457001 48.773003 c
25.181 49.368004 25.43 49.954002 25.966002 50.194004 c
26.467001 50.419003 27.008001 50.184006 27.303001 49.607002 c
27.365002 49.485001 27.404001 49.356003 27.455002 49.230003 c
28.820999 45.959999 30.756001 43.081001 33.373001 40.678001 c
h
f
41.792 41.019001 m
42.247002 40.813999 42.617001 40.540001 42.579998 39.966 c
42.531998 39.225998 41.792 38.769001 41.108997 39.113998 c
40.064999 39.643997 39.008999 40.168999 38.033997 40.809998 c
34.401997 43.195999 31.784996 46.430996 30.145996 50.453999 c
29.919996 51.007999 29.916996 51.521999 30.458996 51.900997 c
31.059996 52.320995 31.687996 52.062996 32.029995 51.236996 c
32.890995 49.155994 34.020996 47.240997 35.548996 45.576996 c
37.327999 43.644001 39.391998 42.099998 41.792 41.019001 c
h
f
43.765999 45.589001 m
44.146 45.408001 44.426998 45.018002 44.622997 44.841999 c
44.622997 43.841999 43.855999 43.362999 43.118996 43.684998 c
41.346996 44.456997 39.771996 45.536999 38.398994 46.897999 c
36.826996 48.457001 35.593994 50.250999 34.810993 52.323997 c
34.681992 52.665997 34.741993 53.184998 34.922993 53.505997 c
35.052994 53.732998 35.612991 53.937996 35.838993 53.833996 c
36.200993 53.672997 36.505993 53.284996 36.725994 52.925995 c
37.383995 51.855995 37.895996 50.684994 38.636993 49.678993 c
39.969002 47.870998 41.735001 46.558998 43.765999 45.589001 c
h
f
77.818001 39.915001 m
77.871002 33.487999 77.945999 27.202 78.016998 21.336 c
78.020996 21.059 78.303001 20.532 78.547997 20.35 c
81.061996 18.469 82.099998 15.541 81.258995 12.708 c
80.394997 9.797 77.787994 7.813 74.775993 7.773 c
74.770996 7.773 74.690994 7.772 74.686996 7.772 c
71.719994 7.772 69.109993 9.708 68.190994 12.585001 c
67.256996 15.508001 68.331993 18.594002 70.866997 20.265001 c
71.236 20.509001 71.327995 20.639002 71.323997 21.262001 c
71.288994 25 71.254997 28.820002 71.222 32.679001 c
65.004997 27.574001 57.223999 24.878 48.966 25.127001 c
31.052 25.632 16.768 40.099998 16.448 58.064999 c
16.287001 67.159996 19.667 75.716995 25.965 82.165001 c
32.256001 88.603004 40.707001 92.177002 49.761002 92.227005 c
49.953003 92.227005 l
58.945004 92.227005 67.379005 88.760002 73.698006 82.467003 c
80.027008 76.162003 83.529007 67.722 83.556007 58.699005 c
83.578003 51.919998 81.564003 45.437 77.818001 39.915001 c
h
73.310997 57.654999 m
73.358994 45.426998 73.466995 32.981998 73.574997 21.281998 c
73.582001 20.334997 73.412994 19.250998 72.105995 18.386997 c
70.396996 17.259996 69.701996 15.250998 70.334991 13.270997 c
70.944992 11.357997 72.733994 10.022997 74.745995 10.022997 c
76.768997 10.049997 78.519997 11.385997 79.102997 13.346997 c
79.667999 15.253998 78.938995 17.245996 77.200996 18.546997 c
76.393997 19.150997 75.778 20.336998 75.766998 21.307997 c
75.633995 32.354996 75.484001 44.872997 75.501999 57.066994 c
75.509003 60.796993 74.393997 63.625992 71.988998 65.966995 c
71.256996 66.681992 70.539001 67.410995 69.819 68.140999 c
69.458 68.510002 69.096001 68.876999 68.731003 69.244995 c
68.634003 69.342995 68.528999 69.432999 68.423004 69.525993 c
67.899002 69.986992 66.729004 71.014992 67.442001 72.626991 c
67.386002 72.715988 67.320999 72.805992 67.267998 72.857994 c
65.903999 74.181992 64.527 75.492996 63.148998 76.800995 c
61.996998 77.896996 60.845997 78.991997 59.702 80.095993 c
59.542 80.249992 59.442001 80.307991 59.398998 80.327995 c
59.358997 80.306992 59.271 80.247993 59.134998 80.102997 c
58.029999 78.928993 56.886997 77.760994 55.912998 76.774994 c
55.674 76.530991 55.620998 76.383995 55.620998 76.351997 c
55.622997 76.32 55.681999 76.169998 55.935997 75.93 c
59.128998 72.920998 61.689999 70.564003 63.751999 68.734001 c
63.764999 68.739998 63.779999 68.746002 63.795998 68.751999 c
64.097 68.862999 64.522995 69.037003 65.016998 69.005997 c
65.431 69.07 65.854996 68.884995 66.098999 68.532997 c
66.108002 68.520996 66.114998 68.507996 66.124001 68.494995 c
66.557999 68.078995 66.995003 67.665993 67.432999 67.253998 c
68.575996 66.175995 69.756996 65.061996 70.866997 63.896999 c
72.478996 62.208 73.300003 60.108002 73.310997 57.654999 c
h
49.952999 88.477997 m
49.780998 88.477997 l
41.737999 88.432999 34.231998 85.260994 28.646997 79.543999 c
23.054996 73.820999 20.054996 66.215996 20.197998 58.131996 c
20.481998 42.174995 33.164997 29.323996 49.072998 28.875996 c
49.367996 28.867996 49.662998 28.862995 49.955997 28.862995 c
57.963997 28.862995 65.470001 31.968994 71.092995 37.609993 c
71.123993 37.640991 71.151993 37.674992 71.182991 37.705994 c
71.131989 44.314995 71.08699 51.010994 71.061989 57.644993 c
71.053986 59.530994 70.458992 61.066994 69.241989 62.343994 c
68.173988 63.466995 67.013992 64.55899 65.89399 65.616997 c
65.510986 65.977997 65.127991 66.338997 64.747986 66.701996 c
64.692986 66.682999 64.636986 66.661995 64.587982 66.642998 c
64.323982 66.543999 63.995983 66.420998 63.610981 66.420998 c
63.193981 66.420998 62.80698 66.567001 62.49398 66.845001 c
60.37598 68.720001 57.725979 71.154999 54.39798 74.292 c
53.731979 74.918999 53.387981 75.598999 53.37698 76.311996 c
53.36298 77.022995 53.679981 77.709999 54.315979 78.354996 c
55.27898 79.331993 56.409981 80.487999 57.498978 81.645996 c
58.085979 82.268997 58.724979 82.584999 59.397976 82.584999 c
60.047977 82.584999 60.661976 82.299995 61.266975 81.713997 c
62.407974 80.613998 63.553974 79.522995 64.702972 78.431999 c
66.085976 77.116997 67.47097 75.800003 68.837975 74.470001 c
68.853973 74.456001 70.292976 73.009003 69.589973 71.875999 c
69.504974 71.737 69.481972 71.658997 69.47097 71.653 c
69.52597 71.553001 69.756973 71.349998 69.911972 71.213997 c
70.055969 71.086998 70.198975 70.960999 70.329971 70.828995 c
70.696968 70.459991 71.061974 70.088997 71.426971 69.717995 c
72.134972 68.998993 72.841972 68.279991 73.562973 67.576996 c
76.390976 64.820999 77.761971 61.381996 77.754974 57.060997 c
77.749977 53.994995 77.755974 50.907997 77.769974 47.827995 c
79.10997 51.250996 79.820976 54.914993 79.808975 58.685997 c
79.753998 75.392998 66.640999 88.477997 49.952999 88.477997 c
h
f
60.737999 59.889999 m
61.042 56.912998 60.184998 54.048 58.323997 51.823997 c
56.397999 49.518997 53.608997 48.116997 50.468998 47.874996 c
44.941998 47.423996 39.836998 52.063995 39.269997 57.800995 c
38.991997 60.615993 40.107998 63.788994 42.184998 66.081993 c
44.153999 68.25399 46.822998 69.450996 49.700996 69.450996 c
49.700996 69.450996 49.700996 69.450996 49.701996 69.450996 c
49.817997 69.450996 49.932995 69.448997 50.050995 69.445 c
50.206993 69.453003 50.362995 69.457001 50.518993 69.457001 c
55.703999 69.456001 60.193001 65.252998 60.737999 59.889999 c
h
50.120998 67.195 m
50.07 67.192001 l
50.019001 67.194 l
49.912003 67.197998 49.806 67.199997 49.700001 67.199997 c
46.834999 67.199997 44.938999 65.769997 43.852001 64.57 c
42.213001 62.762001 41.292999 60.189999 41.507999 58.02 c
41.959 53.460999 45.954998 49.779999 50.295998 50.116001 c
52.826996 50.311001 55.064999 51.43 56.598 53.264 c
58.065998 55.021999 58.743 57.292999 58.5 59.66 c
58.056999 64.029999 54.32 67.425003 50.120998 67.195 c
h
f
Q
q
[26.100986 0 0 26.099691 695.20258 4149.6816] cm
/DeviceRGB {} CS
[0.0667 0.0667 0.0667] SC
/DeviceRGB {} cs
[0.0667 0.0667 0.0667] sc
1.4 40.080002 m
1 40.120003 0.84 38.720001 1.16 38.640003 c
3.48 38.040005 5.28 37.680004 5.28 34.720001 c
5.28 16.960001 l
5.28 14.400002 3.64 13.720001 1.92 13.280001 c
1.6 13.200001 1.8 11.880001 2.12 11.920001 c
3.76 12.120001 5.44 12.160001 7.12 12.160001 c
10.24 12.160001 13.04 11.920001 15.08 11.920001 c
24.76 11.920001 30 17.68 30 25.400002 c
30 33.080002 24.76 40.080002 15.04 40.080002 c
13.12 40.080002 10.639999 39.84 7.68 39.84 c
5.2 39.84 3.24 39.880001 1.4 40.080002 c
1.4 40.080002 l
h
15.44 37.959999 m
21.959999 37.959999 25.200001 34.439999 25.200001 27.68 c
25.200001 20.040001 21.040001 14.04 13.840001 14.04 c
11.000001 14.04 10.080001 14.92 10.080001 16.959999 c
10.080001 34.720001 l
10.080001 36.880001 11.560001 37.960003 15.440001 37.960003 c
15.44 37.959999 l
h
63.84 38.639999 m
64.160004 38.68 63.920002 40 63.599998 40 c
52.639999 40 l
52.32 40 52.079998 38.68 52.399998 38.639999 c
54.439999 38.360001 55.719997 37.559998 55.719997 35.040001 c
55.719997 28.16 l
55.519997 27.48 54.679996 27.48 53.919998 27.48 c
43.68 27.48 l
42.920002 27.48 42.080002 27.48 41.880001 28.16 c
41.880001 35.040001 l
41.880001 37.84 43.48 38.400002 45.200001 38.639999 c
45.52 38.68 45.280003 40 44.959999 40 c
34 40 l
33.68 40 33.439999 38.68 33.759998 38.639999 c
35.799999 38.360001 37.079998 37.559998 37.079998 35.040001 c
37.079998 16.960001 l
37.079998 14.440001 35.799999 13.640001 33.759998 13.360001 c
33.439999 13.320001 33.679996 12.000001 34 12.000001 c
44.959999 12.000001 l
45.279999 12.000001 45.52 13.320001 45.200001 13.360001 c
43.48 13.6 41.880001 14.160001 41.880001 16.960001 c
41.880001 24.280001 l
42.080002 24.960001 42.920002 24.960001 43.68 24.960001 c
53.919998 24.960001 l
54.679996 24.960001 55.519997 24.960001 55.719997 24.280001 c
55.719997 16.960001 l
55.719997 14.440001 54.439999 13.640001 52.399998 13.360001 c
52.079998 13.320001 52.319996 12.000001 52.639999 12.000001 c
63.599998 12.000001 l
63.919998 12.000001 64.159996 13.320001 63.84 13.360001 c
62.119999 13.6 60.52 14.160001 60.52 16.960001 c
60.52 35.040001 l
60.52 37.84 62.119999 38.400002 63.84 38.639999 c
h
94.360001 12 m
94.840004 12 94.959999 13.28 94.480003 13.36 c
92.920006 13.599999 91.560005 14.719999 89.720001 17.599998 c
83.32 27.599998 l
83.32 35.039997 l
83.32 37.839996 84.919998 38.319996 87.400002 38.639996 c
87.68 38.679996 87.480003 39.999996 87.160004 39.999996 c
74.639999 39.999996 l
74.32 39.999996 74.120003 38.679996 74.400002 38.639996 c
77.040001 38.279995 78.520004 37.759995 78.520004 35.039997 c
78.520004 27.759996 l
71.800003 17.639996 l
69.960007 14.879995 68.840004 13.639996 67.120003 13.359995 c
66.600006 13.279995 66.720001 11.999995 67.240005 11.999995 c
77.800003 11.999995 l
78.32 11.999995 78.400002 13.279995 77.920006 13.359995 c
76.160004 13.639995 75.480003 14.999995 77.200005 17.599995 c
82.280006 25.159994 l
87.160004 17.599995 l
88.840004 14.999994 87.840004 13.679995 85.720001 13.359995 c
85.160004 13.279995 85.32 11.999995 85.800003 11.999995 c
94.360001 11.999995 l
94.360001 12 l
h
97.400002 40.080002 m
97 40.120003 96.840004 38.720001 97.160004 38.640003 c
99.480003 38.040005 101.280006 37.680004 101.280006 34.720001 c
101.280006 16.960001 l
101.280006 14.400002 99.640007 13.720001 97.920006 13.280001 c
97.600006 13.200001 97.800003 11.880001 98.120003 11.920001 c
101.040001 12.240001 106.080002 12.160001 108.520004 12.160001 c
112.160004 12.160001 114.800003 12.000001 118.080002 11.920001 c
119.040001 11.920001 119.040001 12.560001 118.840004 13.480001 c
117.880005 17.280001 l
117.760002 17.84 116.760002 17.84 116.600006 17.280001 c
116.000008 15.320001 114.800003 14.200001 109.800003 14.200001 c
107 14.200001 106.080002 14.920001 106.080002 17 c
106.080002 23.52 l
106.080002 24.560001 106.599998 24.76 107.400002 24.76 c
108.279999 24.76 l
111.519997 24.76 114.32 24.440001 115.959999 22.960001 c
116.360001 22.6 117.239998 22.68 116.879997 23.480001 c
114.599998 28.52 l
114.279999 29.24 113.68 29.16 113.239998 28.560001 c
112.32 27.280001 110.279999 26.760002 107.959999 26.760002 c
107.400002 26.760002 l
106.599998 26.760002 106.080002 26.960003 106.080002 28.000002 c
106.080002 34.720001 l
106.080002 37 107.040001 37.84 110.360001 37.84 c
116.400002 37.84 118.800003 35.080002 119.760002 33.560001 c
120.040001 33.120003 121.120003 33.32 121.120003 34 c
121.120003 36.040001 119.400002 40.080002 116.880005 40.080002 c
114.640007 39.960003 112.440002 39.84 109.080002 39.84 c
105.400002 39.84 101.040001 39.720001 97.400002 40.080002 c
h
151.479996 12 m
151.959991 12 152.080002 13.28 151.599991 13.36 c
150.039993 13.599999 148.679993 14.719999 146.839996 17.599998 c
140.440002 27.599998 l
140.440002 35.039997 l
140.440002 37.839996 142.040009 38.319996 144.520004 38.639996 c
144.800003 38.679996 144.600006 39.999996 144.279999 39.999996 c
131.759995 39.999996 l
131.439987 39.999996 131.23999 38.679996 131.519989 38.639996 c
134.159988 38.279995 135.639984 37.759995 135.639984 35.039997 c
135.639984 27.759996 l
128.919983 17.639996 l
127.079987 14.879995 125.959984 13.639996 124.239983 13.359995 c
123.719986 13.279995 123.839981 11.999995 124.359985 11.999995 c
134.919983 11.999995 l
135.439987 11.999995 135.519989 13.279995 135.039978 13.359995 c
133.279984 13.639995 132.599976 14.999995 134.319977 17.599995 c
139.399979 25.159994 l
144.279984 17.599995 l
145.959976 14.999994 144.959976 13.679995 142.839981 13.359995 c
142.279984 13.279995 142.439987 11.999995 142.919983 11.999995 c
151.47998 11.999995 l
151.479996 12 l
h
171.16 40.639999 m
167.88 40.639999 162.880005 39.200001 163.360001 37.439999 c
163.759995 35.959999 l
164.87999 31.759998 166.199997 37.919998 172.79999 37.919998 c
176.15999 37.919998 177.79999 36.279999 177.79999 33.959999 c
177.79999 32.079998 176.59999 31.279999 173.75999 29.519999 c
169.87999 27.079998 l
165.559982 24.359999 163.799988 22.679998 163.799988 19.679998 c
163.799988 14.759998 168.59999 11.359999 173.55998 11.359999 c
176.59998 11.359999 180.47998 12.679998 180.03998 14.039999 c
179.55998 15.56 l
178.31998 19.439999 177.31998 14.08 171.83998 14.08 c
168.99998 14.08 167.519974 15.520001 167.519974 17.639999 c
167.519974 19.439999 168.59998 20.439999 171.27997 22.08 c
175.47997 24.68 l
179.71997 27.32 181.43997 29.120001 181.43997 32 c
181.43997 37 176.51997 40.639999 171.15997 40.639999 c
171.16 40.639999 l
h
191 40 m
190.64 40 190.39999 38.720001 190.72 38.68 c
193.48 38.32 195.32001 37.760002 195.32001 35.599998 c
195.32001 15.879999 l
195.32001 14.879999 194.96001 14.56 194 14.56 c
192.92 14.56 l
189.12 14.56 187 15.44 186.2 17.16 c
185.84 17.959999 184.48 17.84 184.64 17.16 c
185 15.719999 185.31999 14.48 185.56 12.36 c
185.64 11.599999 186.08 11.639999 186.8 11.719999 c
188.64 11.919999 190.32001 11.999999 197.92 11.999999 c
205.51999 11.999999 208.2 11.919999 210.12 11.719999 c
210.84 11.639999 211.51999 11.599999 211.28 12.36 c
210.67999 14.24 210.28 15.719999 210.03999 17.16 c
209.92 17.84 208.84 17.879999 208.67999 17.16 c
208.28 15.48 206.51999 14.56 203.07999 14.56 c
201.83998 14.56 l
200.87997 14.56 200.27998 14.879999 200.27998 15.879999 c
200.27998 35.599998 l
200.27998 37.759998 202.11998 38.32 204.87999 38.68 c
205.2 38.720001 204.95999 40 204.59999 40 c
190.99998 40 l
191 40 l
h
229.28 40.639999 m
223.64 40.639999 217.31999 37.639999 217.31999 29.52 c
217.31999 16.959999 l
217.31999 14.439999 216.03999 13.599999 214.07999 13.359999 c
213.75998 13.319999 213.99998 11.999999 214.31999 11.999999 c
225.23999 11.999999 l
225.56 11.999999 225.79999 13.319999 225.48 13.359999 c
223.87999 13.559999 222.28 14.159999 222.28 16.959999 c
222.28 29.719999 l
222.28 35.32 225.52 37.919998 229.75999 37.919998 c
234.12 37.919998 237.59999 35.32 237.59999 29.719997 c
237.59999 16.959997 l
237.59999 14.359997 236.12 13.639998 234.15999 13.359997 c
233.87999 13.319997 234.07999 11.999997 234.39999 11.999997 c
243.39999 11.999997 l
243.67999 11.999997 243.92 13.319997 243.59999 13.359997 c
241.99998 13.559997 240.39999 14.159997 240.39999 16.959997 c
240.39999 29.479998 l
240.39999 36.839996 235.64 40.639999 229.28 40.639999 c
h
246.56 40.080002 m
246.16 40.120003 246 38.720001 246.31999 38.640003 c
248.64 38.040005 250.43999 37.680004 250.43999 34.720001 c
250.43999 16.960001 l
250.43999 14.400002 248.79999 13.720001 247.07999 13.280001 c
246.75998 13.200001 246.95999 11.880001 247.27998 11.920001 c
248.91998 12.120001 250.59999 12.160001 252.27998 12.160001 c
255.39998 12.160001 258.19998 11.920001 260.23999 11.920001 c
269.91998 11.920001 275.16 17.68 275.16 25.400002 c
275.16 33.080002 269.92001 40.080002 260.20001 40.080002 c
258.28 40.080002 255.80002 39.84 252.84001 39.84 c
250.36002 39.84 248.40001 39.880001 246.56001 40.080002 c
246.56 40.080002 l
h
260.60001 37.959999 m
267.12 37.959999 270.36002 34.439999 270.36002 27.68 c
270.36002 20.040001 266.20001 14.04 259.00003 14.04 c
256.16003 14.04 255.24004 14.92 255.24004 16.959999 c
255.24004 34.720001 l
255.24004 36.880001 256.72003 37.960003 260.60004 37.960003 c
260.60001 37.959999 l
h
279.16 40 m
278.84 40 278.60001 38.68 278.92001 38.639999 c
280.96002 38.360001 282.24002 37.559998 282.24002 35.040001 c
282.24002 16.960001 l
282.24002 14.440001 280.96002 13.640001 278.92001 13.360001 c
278.60001 13.320001 278.84003 12.000001 279.16 12.000001 c
290.12 12.000001 l
290.44 12.000001 290.67999 13.320001 290.35999 13.360001 c
288.63998 13.6 287.03998 14.160001 287.03998 16.960001 c
287.03998 35.040001 l
287.03998 37.84 288.63998 38.400002 290.35999 38.639999 c
290.67999 38.68 290.43997 40 290.12 40 c
279.16 40 l
h
308.76001 40.639999 m
300.44 40.639999 294.32001 34.48 294.32001 26.16 c
294.32001 18.08 300.08002 11.36 308.84 11.36 c
317.19998 11.36 323.28 17.48 323.28 25.799999 c
323.28 33.919998 317.56 40.639999 308.76001 40.639999 c
h
310.32001 37.919998 m
313.84 37.919998 318.52002 35.599998 318.52002 28.039997 c
318.52002 19.959997 313.04001 14.079997 307.28003 14.079997 c
303.76004 14.079997 299.12003 16.399998 299.12003 23.919998 c
299.12003 32.079998 304.60004 37.919998 310.32004 37.919998 c
310.32001 37.919998 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
